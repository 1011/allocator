// Chris Iverson
// Compilers 198:415
// Spring 2018
//Using the Simple Top Down allocator with 10 registers on
//	loadI	1024	=> r0
//	loadI	4000	=> r63
//	loadI	4	=> r1
//	loadI	1	=> r25
//	load	r63	=> r10
//	add	r63, r1	=> r26
//	load	r26	=> r11
//	add	r26, r1	=> r27
//	load	r27	=> r12
//	add	r27, r1	=> r28
//	load	r28	=> r13
//	add	r28, r1	=> r29
//	load	r29	=> r14
//	add	r29, r1	=> r30
//	load	r30	=> r15
//	add	r30, r1	=> r31
//	load	r31	=> r16
//	add	r31, r1	=> r32
//	load	r32	=> r17
//	add	r32, r1	=> r33
//	load	r33	=> r18
//	add	r33, r1	=> r34
//	load	r34	=> r19
//	add	r34, r1	=> r35
//	loadI	0	=> r2
//	add	r10, r11	=> r36
//	mult	r25, r11	=> r3
//	sub	r19, r10	=> r4
//	add	r36, r12	=> r37
//	mult	r3, r12	=> r38
//	add	r4, r18	=> r39
//	add	r37, r13	=> r40
//	mult	r38, r13	=> r41
//	sub	r39, r17	=> r42
//	add	r40, r14	=> r43
//	mult	r41, r14	=> r44
//	add	r42, r16	=> r45
//	add	r43, r15	=> r46
//	mult	r44, r15	=> r47
//	sub	r45, r15	=> r48
//	add	r46, r16	=> r49
//	mult	r47, r16	=> r50
//	add	r45, r14	=> r51
//	loadI	16	=> r20
//	rshift	r50, r20	=> r52
//	add	r49, r17	=> r53
//	mult	r52, r17	=> r54
//	sub	r51, r13	=> r55
//	add	r53, r18	=> r56
//	mult	r54, r18	=> r57
//	add	r55, r12	=> r58
//	add	r56, r19	=> r59
//	mult	r57, r19	=> r60
//	sub	r58, r11	=> r61
//	loadI	1024	=> r62
//	store	r59	=> r62
//	loadI	1028	=> r21
//	store	r60	=> r21
//	loadI	1032	=> r22
//	store	r61	=> r22
//	output	1024
//	output	1028
//	output	1032

//Mapping of virtual registers to physical registers/memory:
	//r1	 Mapped to: r3	 Freq= 11
	//r11	 Mapped to: r4	 Freq= 4
	//r12	 Mapped to: r5	 Freq= 4
	//r13	 Mapped to: r6	 Freq= 4
	//r14	 Mapped to: r7	 Freq= 4
	//r15	 Mapped to: r8	 Freq= 4
	//r16	 Mapped to: r9	 Freq= 4
	//r17	 Mapped to: r10	 Freq= 4
	//r18	 Mapped to: -4	 Freq= 4
	//r19	 Mapped to: -8	 Freq= 4
	//r63	 Mapped to: -12	 Freq= 3
	//r10	 Mapped to: -16	 Freq= 3
	//r26	 Mapped to: -20	 Freq= 3
	//r27	 Mapped to: -24	 Freq= 3
	//r28	 Mapped to: -28	 Freq= 3
	//r29	 Mapped to: -32	 Freq= 3
	//r30	 Mapped to: -36	 Freq= 3
	//r31	 Mapped to: -40	 Freq= 3
	//r32	 Mapped to: -44	 Freq= 3
	//r33	 Mapped to: -48	 Freq= 3
	//r34	 Mapped to: -52	 Freq= 3
	//r45	 Mapped to: -56	 Freq= 3
	//r25	 Mapped to: -60	 Freq= 2
	//r36	 Mapped to: -64	 Freq= 2
	//r3	 Mapped to: -68	 Freq= 2
	//r4	 Mapped to: -72	 Freq= 2
	//r37	 Mapped to: -76	 Freq= 2
	//r38	 Mapped to: -80	 Freq= 2
	//r39	 Mapped to: -84	 Freq= 2
	//r40	 Mapped to: -88	 Freq= 2
	//r41	 Mapped to: -92	 Freq= 2
	//r42	 Mapped to: -96	 Freq= 2
	//r43	 Mapped to: -100	 Freq= 2
	//r44	 Mapped to: -104	 Freq= 2
	//r46	 Mapped to: -108	 Freq= 2
	//r47	 Mapped to: -112	 Freq= 2
	//r49	 Mapped to: -116	 Freq= 2
	//r50	 Mapped to: -120	 Freq= 2
	//r51	 Mapped to: -124	 Freq= 2
	//r20	 Mapped to: -128	 Freq= 2
	//r52	 Mapped to: -132	 Freq= 2
	//r53	 Mapped to: -136	 Freq= 2
	//r54	 Mapped to: -140	 Freq= 2
	//r55	 Mapped to: -144	 Freq= 2
	//r56	 Mapped to: -148	 Freq= 2
	//r57	 Mapped to: -152	 Freq= 2
	//r58	 Mapped to: -156	 Freq= 2
	//r59	 Mapped to: -160	 Freq= 2
	//r60	 Mapped to: -164	 Freq= 2
	//r61	 Mapped to: -168	 Freq= 2
	//r62	 Mapped to: -172	 Freq= 2
	//r21	 Mapped to: -176	 Freq= 2
	//r22	 Mapped to: -180	 Freq= 2
	//r35	 Mapped to: -184	 Freq= 1
	//r2	 Mapped to: -188	 Freq= 1
	//r48	 Mapped to: -192	 Freq= 1
//Allocation runtime: 156992.663 milliseconds
//___________________________
loadI	1024	=> r0
loadI	4000	=> r1
storeAI	r1	=> r0, -12
loadI	4	=> r3
loadI	1	=> r1
storeAI	r1	=> r0, -60
loadAI	r0, -12	=> r1
load	r1	=> r1
storeAI	r1	=> r0, -16
loadAI	r0, -12	=> r1
add	r1, r3	=> r1
storeAI	r1	=> r0, -20
loadAI	r0, -20	=> r1
load	r1	=> r4
loadAI	r0, -20	=> r2
add	r2, r3	=> r1
storeAI	r1	=> r0, -24
loadAI	r0, -24	=> r1
load	r1	=> r5
loadAI	r0, -24	=> r2
add	r2, r3	=> r1
storeAI	r1	=> r0, -28
loadAI	r0, -28	=> r1
load	r1	=> r6
loadAI	r0, -28	=> r2
add	r2, r3	=> r1
storeAI	r1	=> r0, -32
loadAI	r0, -32	=> r1
load	r1	=> r7
loadAI	r0, -32	=> r2
add	r2, r3	=> r1
storeAI	r1	=> r0, -36
loadAI	r0, -36	=> r1
load	r1	=> r8
loadAI	r0, -36	=> r2
add	r2, r3	=> r1
storeAI	r1	=> r0, -40
loadAI	r0, -40	=> r1
load	r1	=> r9
loadAI	r0, -40	=> r2
add	r2, r3	=> r1
storeAI	r1	=> r0, -44
loadAI	r0, -44	=> r1
load	r1	=> r10
loadAI	r0, -44	=> r2
add	r2, r3	=> r1
storeAI	r1	=> r0, -48
loadAI	r0, -48	=> r1
load	r1	=> r1
storeAI	r1	=> r0, -4
loadAI	r0, -48	=> r1
add	r1, r3	=> r1
storeAI	r1	=> r0, -52
loadAI	r0, -52	=> r1
load	r1	=> r1
storeAI	r1	=> r0, -8
loadAI	r0, -52	=> r1
add	r1, r3	=> r1
storeAI	r1	=> r0, -184
loadI	0	=> r1
storeAI	r1	=> r0, -188
loadAI	r0, -16	=> r1
add	r1, r4	=> r1
storeAI	r1	=> r0, -64
loadAI	r0, -60	=> r1
mult	r1, r4	=> r1
storeAI	r1	=> r0, -68
loadAI	r0, -8	=> r1
loadAI	r0, -16	=> r2
sub	r1, r2	=> r1
storeAI	r1	=> r0, -72
loadAI	r0, -64	=> r1
add	r1, r5	=> r1
storeAI	r1	=> r0, -76
loadAI	r0, -68	=> r1
mult	r1, r5	=> r1
storeAI	r1	=> r0, -80
loadAI	r0, -72	=> r1
loadAI	r0, -4	=> r2
add	r1, r2	=> r1
storeAI	r1	=> r0, -84
loadAI	r0, -76	=> r1
add	r1, r6	=> r1
storeAI	r1	=> r0, -88
loadAI	r0, -80	=> r1
mult	r1, r6	=> r1
storeAI	r1	=> r0, -92
loadAI	r0, -84	=> r1
sub	r1, r10	=> r1
storeAI	r1	=> r0, -96
loadAI	r0, -88	=> r1
add	r1, r7	=> r1
storeAI	r1	=> r0, -100
loadAI	r0, -92	=> r1
mult	r1, r7	=> r1
storeAI	r1	=> r0, -104
loadAI	r0, -96	=> r1
add	r1, r9	=> r1
storeAI	r1	=> r0, -56
loadAI	r0, -100	=> r1
add	r1, r8	=> r1
storeAI	r1	=> r0, -108
loadAI	r0, -104	=> r1
mult	r1, r8	=> r1
storeAI	r1	=> r0, -112
loadAI	r0, -56	=> r1
sub	r1, r8	=> r1
storeAI	r1	=> r0, -192
loadAI	r0, -108	=> r1
add	r1, r9	=> r1
storeAI	r1	=> r0, -116
loadAI	r0, -112	=> r1
mult	r1, r9	=> r1
storeAI	r1	=> r0, -120
loadAI	r0, -56	=> r1
add	r1, r7	=> r1
storeAI	r1	=> r0, -124
loadI	16	=> r1
storeAI	r1	=> r0, -128
loadAI	r0, -120	=> r1
loadAI	r0, -128	=> r2
rshift	r1, r2	=> r1
storeAI	r1	=> r0, -132
loadAI	r0, -116	=> r1
add	r1, r10	=> r1
storeAI	r1	=> r0, -136
loadAI	r0, -132	=> r1
mult	r1, r10	=> r1
storeAI	r1	=> r0, -140
loadAI	r0, -124	=> r1
sub	r1, r6	=> r1
storeAI	r1	=> r0, -144
loadAI	r0, -136	=> r1
loadAI	r0, -4	=> r2
add	r1, r2	=> r1
storeAI	r1	=> r0, -148
loadAI	r0, -140	=> r1
loadAI	r0, -4	=> r2
mult	r1, r2	=> r1
storeAI	r1	=> r0, -152
loadAI	r0, -144	=> r1
add	r1, r5	=> r1
storeAI	r1	=> r0, -156
loadAI	r0, -148	=> r1
loadAI	r0, -8	=> r2
add	r1, r2	=> r1
storeAI	r1	=> r0, -160
loadAI	r0, -152	=> r1
loadAI	r0, -8	=> r2
mult	r1, r2	=> r1
storeAI	r1	=> r0, -164
loadAI	r0, -156	=> r1
sub	r1, r4	=> r1
storeAI	r1	=> r0, -168
loadI	1024	=> r1
storeAI	r1	=> r0, -172
loadAI	r0, -160	=> r1
loadAI	r0, -172	=> r2
store	r1	=> r2
loadI	1028	=> r1
storeAI	r1	=> r0, -176
loadAI	r0, -164	=> r1
loadAI	r0, -176	=> r2
store	r1	=> r2
loadI	1032	=> r1
storeAI	r1	=> r0, -180
loadAI	r0, -168	=> r1
loadAI	r0, -180	=> r2
store	r1	=> r2
output	1024
output	1028
output	1032
